1. 시퀸스 컨테이너와 연관 컨테이너의 가장 큰 차이점

    - 시퀸스 컨테이너는 연속된 메모리 할당
    - 연관 컨테이너는 검색이 빠름

    A) 시퀸스 컨테이너는 원소의 상대적인 순서가 유지되며, 연관 컨테이너는 특정 정렬 기준에 따라 정렬됨.
2. 연관 컨테이너의 기본 정렬 기준은?

    - less (오름차순)
    A) < 연산자 함수 객체인 less<>

3. set에 같은 원소(key)를 저장하면 어떻게 될까요?

    - 삽입 시 성공 여부를 bool로 리턴함. 실패하여 0을 반환
    A) set은 같은 key가 컨테이너에 존재할 수 없으므로 무시됨

4. multiset에 같은 원소(key)를 저장하면 어떻게 될까요?

    - 삽입됨.
    A) multiset은 같은 key가 컨테이너에 존재할 수 있으므로, 정렬 기준에 따라 원소가 저장됨

5. set과 map의 차이점을 쓰세요.

    -set은 하나의 key를 가지는 연관 컨테이너, map은 key, value를 쌍으로 가지는 컨테이너
    A) set은 컨테이너에 원소로 key만을 저장할 수 있으며, map은 컨테이너에 원소로 key와 value의 쌍을 저장함.

6. 연관 컨테이너의 lower_bound()와 upper_bound()의 반환값은 무엇인가요?

    -lower_bound()는 시작 반복자의 위치를 반환
    -upper_bound()는 그 다음 위치를 반환
    A) lower_bound()는 찾는 원소의 순차열 시작 반복자를 반환,
        upper_bound()는 찾는 원소의 순차열 끝 반복자를 반환.
        원소를 찾지 못하면 모두 순차열 끝 표시 반복자를 반환

7. 시퀸스 컨테이너의 insert()와 연관 컨테이너의 insert()의 차이점을 쓰세요.

    A) 시퀸스 컨테이너는 insert()가 호출되면, 가리키는 반복자의 위치에 삽입되지만,
        연관 컨테이너의 insert()는 특정 정렬 기준에 따라 삽입 위치를 찾아 삽입됨.

8. 연관 컨테이너의 찾기 관련 함수는 다음 중 어떤 검색 성능을 갖나요?

    1) 상수
    2) 선형
    3) 로그
    4) 지수

    -3 로그 시간